name: "Push"

on:
  push:
    branches:
      - master

jobs:
  build_frontend:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - name: Build
        run: |
          npm install
          npm run build

  deploy:
    runs-on: ubuntu-latest
    needs: build_frontend
    env:
      ts: "date '+%Y%m%d%H%M%S'"
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: "3.x"

      # Get updated translations
      - name: Download Lokalise CLI
        run: |
          curl -sSL \
            "https://s3-eu-west-1.amazonaws.com/lokalise-assets/cli/lokalise-0.721-linux-amd64.tgz" \
            -o ./lokalise.tgz
          tar -xvzf ./lokalise.tgz
      - name: Downloading translations
        run: |
          ./lokalise \
              --token "${{ secrets.lokalise_token }}" \
              export "190570815d9461966ae081.06523141" \
              --type json \
              --unzip_to  /tmp/lokalise \
              --filter last_reviewed_only \
              --export_empty skip \
              --export_sort a_z
      - name: Move new  translations
        run: |
          rm -R /home/runner/work/frontend/frontend/src/localize/languages/
          mkdir -p /home/runner/work/frontend/frontend/src/localize/languages/
          cp /tmp/lokalise/locale/* /home/runner/work/frontend/frontend/src/localize/languages/

      - name: "Set version number"
        run: |
          sed -i '/version=/c\version="$ts",' ./setup.py
          sed -i 's|version|"$ts"|g' ./hacs_frontend/version.py
          sed -i 's|master|"$ts"|g' ./version.js

          cat ./setup.py
          cat ./hacs_frontend/version.py
          cat ./version.js

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine
          npm install

      - name: Build and publish
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: |
          npm run postinstall
          npm run build
          python setup.py sdist bdist_wheel
          twine upload dist/*

      - name: Discord notification
        env:
          DISCORD_WEBHOOK: "https://discordapp.com/api/webhooks/636183377220730880/WA71A3QwHQJ4FLHVzPvu-dqCHhuFEKPuUbcsb3lXeeqRgdOqekIB7gT8eBFnaNNQ0xne"
        uses: Ilshidur/action-discord@0.0.2
        with:
          args: "Version $ts of HACS frontend are now pushed to PyPi."

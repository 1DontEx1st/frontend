name: Upload Python Package

on:
  release:
    types: [created]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: "3.x"

      # Get updated translations
      - name: Download Lokalise CLI
        run: |
          curl -sSL \
            "https://s3-eu-west-1.amazonaws.com/lokalise-assets/cli/lokalise-0.721-linux-amd64.tgz" \
            -o ./lokalise.tgz
          tar -xvzf ./lokalise.tgz
      - name: Downloading translations
        run: |
          ./lokalise \
              --token "${{ secrets.lokalise_token }}" \
              export "190570815d9461966ae081.06523141" \
              --type json \
              --unzip_to  /tmp/lokalise \
              --filter reviewed \
              --export_empty skip \
              --export_sort a_z
      - name: Move new  translations
        run: |
          rm -R /home/runner/work/frontend/frontend/src/localize/languages/
          mkdir -p /home/runner/work/frontend/frontend/src/localize/languages/
          cp /tmp/lokalise/locale/* /home/runner/work/frontend/frontend/src/localize/languages/

      - name: "Set version number"
        run: |
          sed -i '/version=/c\version="${{ github.ref }}",' ./setup.py
          sed -i 's|refs/heads/||' ./setup.py
          sed -i 's|refs/tags/||' ./setup.py

          sed -i '/version/${{ github.ref }}/' ./hacs_frontend/version.py
          sed -i 's|refs/heads/||' ./hacs_frontend/version.py
          sed -i 's|refs/tags/||' ./hacs_frontend/version.py

          sed -i 's|VERSION|${{ github.ref }}|g' ./rollup.config.js
          sed -i 's|refs/heads/||' ./rollup.config.js
          sed -i 's|refs/tags/||' ./rollup.config.js

          sed -i 's|VERSION|${{ github.ref }}|g' ./rollup.config.debug.js
          sed -i 's|refs/heads/||' ./rollup.config.debug.js
          sed -i 's|refs/tags/||' ./rollup.config.debug.js

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine
          npm install

      - name: Build and publish
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: |
          npm run postinstall
          npm run build
          python setup.py sdist bdist_wheel
          twine upload dist/*
